package com.tisawesomeness.minecord.util;

import lombok.NonNull;

import java.util.Optional;
import java.util.UUID;
import java.util.regex.Pattern;

/**
 * Utility class to work with {@link UUID} and UUID strings with or without dashes
 */
public final class UUIDUtils {
    private UUIDUtils() {}

    // Minecraft uses Version 4, Variant 1 UUIDs (the kind generated by UUID.randomUUID())
    private static final Pattern SHORT_UUID_PATTERN = Pattern.compile(
            "^([0-9a-fA-F]{8})([0-9a-fA-F]{4})(4[0-9a-fA-F]{3})([89abAB][0-9a-fA-F]{3})([0-9a-fA-F]{12})$");
    private static final String SHORT_UUID_REPLACEMENT = "$1-$2-$3-$4-$5";
    private static final Pattern LONG_UUID_PATTERN = Pattern.compile(
            "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$");

    /**
     * Tries to parse a version 4, variant 1 UUID from a string.
     * <br>A valid UUID is in the format {@code xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx},
     * case insensitive and with or without dashes.
     * <br>{@code M} = the version of the UUID, which is 4.
     * <br>{@code N} = the upper bits encode the variant of the UUID, 8-b means variant 1.
     * @param str A possible UUID string
     * @return The parsed UUID or empty if the string is not the correct format
     */
    public static Optional<UUID> fromString(@NonNull String str) {
        if (LONG_UUID_PATTERN.matcher(str).matches()) {
            return Optional.of(UUID.fromString(str));
        }
        String replaced = SHORT_UUID_PATTERN.matcher(str).replaceAll(SHORT_UUID_REPLACEMENT);
        if (!replaced.equals(str)) {
            return Optional.of(UUID.fromString(replaced));
        }
        return Optional.empty();
    }

    /**
     * Converts a UUID to a string without dashes.
     * @param uuid Any input UUID
     * @return The UUID as a string
     */
    public static @NonNull String toShortString(@NonNull UUID uuid) {
        return uuid.toString().replace("-", "");
    }

    /**
     * Converts a UUID to a string with dashes in {@code 8-4-4-4-12} format.
     * @param uuid Any input UUID
     * @return The UUID as a string
     */
    public static @NonNull String toLongString(@NonNull UUID uuid) {
        return uuid.toString();
    }

}
