plugins {
    id 'java'
    id 'java-library'
    id 'io.freefair.lombok' version '5.3.0'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://jcenter.bintray.com')
    }
    maven {
        url = uri('https://jitpack.io')
    }
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }
}

testSets {
    integrationTest
}

String jdaVersion = '4.2.0_168'

dependencies {
    // JDA with no audio
    implementation ("net.dv8tion:JDA:$jdaVersion") {
        exclude module: 'opus-java'
    }
    // Top.gg bot site API wrapper
    implementation 'com.github.DiscordBotList:Java-Wrapper:v1.0'
    // All-purpose library
    implementation 'com.google.guava:guava:29.0-jre'
    // Caching
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.5'
    // JSON library
    implementation 'org.json:json:20160810'
    // YAML library
    api 'com.fasterxml.jackson.core:jackson-databind:2.12.0'
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.0'
    // SQLite driver
    implementation 'org.xerial:sqlite-jdbc:3.30.1'
    // Used for MCServerPing
    implementation 'dnsjava:dnsjava:2.1.8'
    implementation 'net.md-5:bungeecord-chat:1.12-SNAPSHOT'
    // Command-line arguments
    implementation 'info.picocli:picocli:4.3.2'
    annotationProcessor 'info.picocli:picocli-codegen:4.3.2'
    // Jshell for eval
    api 'ch.obermuhlner:jshell-scriptengine:1.1.0'
    // Logging
    api 'org.apache.logging.log4j:log4j-core:2.8.2'
    api 'org.slf4j:slf4j-api:1.7.25'
    api 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.assertj:assertj-core:3.16.1'
}

group = 'com.tisawesomeness'
version = '1.0.0-ALPHA'
sourceCompatibility = '1.11'

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filesMatching("**/build.properties") {
        filter ReplaceTokens, tokens: [
                "version": project.version,
                "jdaVersion": jdaVersion
        ]
    }
}

test {
    useJUnitPlatform()
}
integrationTest {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.tisawesomeness.minecord.Main'
        )
    }
}

shadowJar {
    minimize()
}
