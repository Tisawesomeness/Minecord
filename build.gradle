plugins {
    id 'java'
    id 'java-library'
    id 'jacoco'
    id 'io.freefair.lombok' version '6.4.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}

group = 'com.tisawesomeness'
sourceCompatibility = '1.8'
version = '1.0.0-ALPHA-10'
def jdaVersion = '4.3.0_296'

repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
    maven {
        name 'sonatype'
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

testSets {
    integrationTest
}

dependencies {
    // JDA with no audio
    // okhttp and apache-collections4 included
    implementation ("net.dv8tion:JDA:$jdaVersion") {
        exclude module: 'opus-java'
    }
    // Top.gg bot site API wrapper
    implementation 'com.github.DiscordBotList:Java-Wrapper:v1.0'
    // Caching
    api 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    // JSON library
    implementation 'org.json:json:20211205'
    // YAML library
    api 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'
    // SQLite driver
    implementation 'org.xerial:sqlite-jdbc:3.36.0.2'
    // Used for MCServerPing
    implementation 'dnsjava:dnsjava:3.5.0'
    implementation 'net.kyori:text-serializer-gson:3.0.4'
    // Command-line arguments
    implementation 'info.picocli:picocli:4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'
    // Logging
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    integrationTestImplementation sourceSets.test.output
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = "UTF-8"

tasks.withType(Test) {
    useJUnitPlatform {
        // Uncomment the line below to exclude tags from testing such as "MojangAPI"
        // excludeTags 'MojangAPI'
    }
}

jacoco {
    toolVersion = "0.8.7"
}

tasks.withType(JacocoReport) {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
test.finalizedBy jacocoTestReport
integrationTest.finalizedBy jacocoIntegrationTestReport
jacocoIntegrationTestReport.mustRunAfter jacocoTestReport

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filesMatching("**/build.properties") {
        filter ReplaceTokens, tokens: [
                "version": project.version,
                "jdaVersion": jdaVersion
        ]
    }
}
processResources.dependsOn cleanProcessResources

jar {
    manifest {
        attributes(
            'Main-Class': 'com.tisawesomeness.minecord.Launcher'
        )
    }
}

shadowJar {
    minimize()
}
